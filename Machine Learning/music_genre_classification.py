# -*- coding: utf-8 -*-
"""Music_Genre_Classification.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XMejTK5h3jUxGuzdYI79QQspQ3Z5GQtB
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv('/content/features_3_sec.csv')
df

x = df.drop(['filename','label'], axis = 1)
x.head()

y = df['label']
y

from sklearn.preprocessing import MinMaxScaler

scaler = MinMaxScaler()
x = scaler.fit_transform(x)
x

from sklearn.preprocessing import LabelEncoder

label_encoder = LabelEncoder()
label_encoder.fit(y)
y_encoded = label_encoder.transform(y)
label_mapping = dict(zip(label_encoder.transform(label_encoder.classes_), label_encoder.classes_))
label_mapping

from sklearn.model_selection import train_test_split

x_train, x_test, y_train, y_test = train_test_split(x, y_encoded, test_size = 0.3, random_state = 1)

from sklearn.neighbors import KNeighborsClassifier

KNN = KNeighborsClassifier(n_neighbors = 1)

KNN.fit(x_train, y_train)

y_pred = KNN.predict(x_test)

y_pred

y_test

from sklearn.metrics import confusion_matrix, classification_report

print(confusion_matrix(y_test, y_pred))
print(classification_report(y_test, y_pred))

error_rate = []

for i in range(1,40):
  KNN = KNeighborsClassifier(n_neighbors = i)
  KNN.fit(x_train,y_train)
  pred_i = KNN.predict(x_test)

  error_rate.append(np.mean(pred_i != y_test))

plt.figure(figsize = (10,6))

plt.plot(range(1,40), error_rate, color = 'blue', linestyle = '--', markersize = '10', markerfacecolor = 'red', marker = 'o')

plt.title('K / Error_Rate')
plt.xlabel('K')
plt.ylabel('Error Rate')